# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Domain\Api\:
        resource: '../src/Domain/Api/'
        tags: ['controller.service_arguments']
    App\Page\Api\:
        resource: '../src/Page/Api/'
        tags: ['controller.service_arguments']
    App\User\Api\:
        resource: '../src/User/Api/'
        tags: ['controller.service_arguments']
    App\Website\Api\:
        resource: '../src/Website/Api/'
        tags: ['controller.service_arguments']
    App\Serve\Controller\:
        resource: '../src/Serve/Controller/'
        tags: ['controller.service_arguments']


    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # Common
    monolog.formatter.application:
        class: Monolog\Formatter\LineFormatter
        arguments:
            - "[%%datetime%%] [%%extra.username%%] [%%extra.token%%] %%channel%%.%%level_name%%: %%message%% %%context%% %%extra%%\n"
    App\Common\Log\SessionRequestProcessor:
        tags:
            - { name: monolog.processor }
    App\Common\Log\UsernameProcessor:
        tags:
            - { name: monolog.processor }

    # Domain
    App\Domain\EventListener\UserRemovalEventListener:
        public: true
        autoconfigure: true
        autowire: true
        tags:
            - { name: kernel.event_listener, event: App\User\Event\UserRemovalEvent }

    # Page
    App\Page\PageBuilder:
        class: App\Page\PageBuilder
        public: true
        autoconfigure: true
        autowire: true
    App\Page\Component\ComponentBuilderProvider:
        class: App\Page\Component\ComponentBuilderProvider
        public: true
        autoconfigure: true
        autowire: true

    # Serve
    App\Serve\Cache\CacheInterface:
        class: App\Serve\Cache\StackedCache
        public: true
        autoconfigure: true
        autowire: true
        arguments:
            $stacked:
                - '@App\Serve\Cache\ArrayCache'
                - '@App\Serve\Cache\RedisCache'
    App\Serve\Cache\RedisCache:
        public: true
        autoconfigure: true
        autowire: true
        arguments:
            $redis: '@snc_redis.default'

    # Website
    App\Website\EventListener\UserRemovalEventListener:
        public: true
        autoconfigure: true
        autowire: true
        tags:
            - { name: kernel.event_listener, event: App\User\Event\UserRemovalEvent }
